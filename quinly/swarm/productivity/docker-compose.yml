networks:
  quinly-services:
    name: quinly-services
    external: true
  quinly-planka:
    driver: bridge
  quinly-vikunja:
    driver: bridge
  quinly-gitea:
    driver: bridge

services:
  planka-frontend:
    image: ghcr.io/plankanban/planka:latest
    container_name: planka-main
    restart: on-failure
    volumes:
      - planka-avatars:/app/public/user-avatars
      - planka-images:/app/public/project-background-images
      - planka-attachments:/app/private/attachments
    environment:
      - BASE_URL=https://planka.quinly.co.uk
      - DATABASE_URL=postgresql://postgres@planka-postgres/planka
      - SECRET_KEY=${SECRET_KEY}
      # - TRUST_PROXY=0
      # - TOKEN_EXPIRES_IN=365 # In days

      # related: https://github.com/knex/knex/issues/2354
      # As knex does not pass query parameters from the connection string we
      # have to use environment variables in order to pass the desired values, e.g.
      # - PGSSLMODE=<value>

      # Configure knex to accept SSL certificates
      # - KNEX_REJECT_UNAUTHORIZED_SSL_CERTIFICATE=false

      - DEFAULT_ADMIN_EMAIL= ${ADMIN_EMAIL}# Do not remove if you want to prevent this user from being edited/deleted
      - DEFAULT_ADMIN_PASSWORD=${ADMIN_PW}
      - DEFAULT_ADMIN_NAME=${ADMIN_NAME}
      - DEFAULT_ADMIN_USERNAME=${ADMIN_USERNAME}
      # - SHOW_DETAILED_AUTH_ERRORS=false #Â Set to true to show more detailed authentication error messages. It should not be enabled without a rate limiter for security reasons.

      - ALLOW_ALL_TO_CREATE_PROJECTS=true

      # - OIDC_ISSUER=
      # - OIDC_CLIENT_ID=
      # - OIDC_CLIENT_SECRET=
      # - OIDC_ID_TOKEN_SIGNED_RESPONSE_ALG=
      # - OIDC_USERINFO_SIGNED_RESPONSE_ALG=
      # - OIDC_SCOPES=openid email profile
      # - OIDC_RESPONSE_MODE=fragment
      # - OIDC_USE_DEFAULT_RESPONSE_MODE=true
      # - OIDC_ADMIN_ROLES=admin
      # - OIDC_CLAIMS_SOURCE=userinfo
      # - OIDC_EMAIL_ATTRIBUTE=email
      # - OIDC_NAME_ATTRIBUTE=name
      # - OIDC_USERNAME_ATTRIBUTE=preferred_username
      # - OIDC_ROLES_ATTRIBUTE=groups
      # - OIDC_IGNORE_USERNAME=true
      # - OIDC_IGNORE_ROLES=true
      # - OIDC_ENFORCED=true

      # Email Notifications (https://nodemailer.com/smtp/)
      # - SMTP_HOST=
      # - SMTP_PORT=587
      # - SMTP_NAME=
      # - SMTP_SECURE=true
      # - SMTP_USER=
      # - SMTP_PASSWORD=
      # - SMTP_FROM="Demo Demo" <demo@demo.demo>
      # - SMTP_TLS_REJECT_UNAUTHORIZED=false

      # Optional fields: accessToken, events, excludedEvents
      # - |
      #   WEBHOOKS=[{
      #     "url": "http://localhost:3001",
      #     "accessToken": "notaccesstoken",
      #     "events": ["cardCreate", "cardUpdate", "cardDelete"],
      #     "excludedEvents": ["notificationCreate", "notificationUpdate"]
      #   }]

      # - SLACK_BOT_TOKEN=
      # - SLACK_CHANNEL_ID=

      # - GOOGLE_CHAT_WEBHOOK_URL=

      # - TELEGRAM_BOT_TOKEN=
      # - TELEGRAM_CHAT_ID=
      # - TELEGRAM_THREAD_ID=
    depends_on:
      planka-postgres:
        condition: service_healthy
    networks:
      quinly-services:
        ipv4_address: ${PLANKA_IP}
      quinly-planka:

  planka-postgres:
    container_name: planka-postgres
    image: postgres:16-alpine
    restart: on-failure
    volumes:
      - planka-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=planka
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d planka"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      quinly-planka:

  # Web browser splash screen / organiser - https://hub.docker.com/r/linuxserver/heimdall/
  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - heimdall-config:/config
    restart: unless-stopped
    networks:
      quinly-services:
        ipv4_address: 10.10.0.32

  code-server:
    image: linuxserver/code-server:4.95.3
    container_name: code-server
    restart: unless-stopped
    environment:
      - TZ=Europe/London # Specify a timezone to use EG Europe/London
      - SUDO_PASSWORD=${CODE_SUDO_PW} # If this optional variable is set, user will have sudo access in the code-server terminal with the specified password.
      - PUID=1000 # for UserID
      - PROXY_DOMAIN=code-server.quinly.co.uk # If this optional variable is set, this domain will be proxied for subdomain proxying.
      - PGID=1000 # for GroupID
      - PASSWORD=${CODE_PW} # Optional web gui password, if not provided, there will be no auth.
    volumes:
      - code-server-config:/config # Contains all relevant configuration files.
    networks:
      quinly-services:
        ipv4_address: 10.10.0.33

  vikunja:
    image: vikunja/vikunja:latest
    container_name: vikunja
    environment:
      VIKUNJA_SERVICE_PUBLICURL: https://vikunja.quinly.co.uk
      VIKUNJA_DATABASE_HOST: db.quinly.co.uk
      VIKUNJA_DATABASE_PASSWORD: ${VIKUNJA_PW}
      VIKUNJA_DATABASE_TYPE: postgres
      VIKUNJA_DATABASE_USER: ${VUKUNJA_DB_USER}
      VIKUNJA_DATABASE_DATABASE: ${VIKUNJA_DB}
      VIKUNJA_SERVICE_JWTSECRET: ${VIKUNJA_ROOT}

    volumes:
      - ./vikunja/:/app/vikunja/files
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    networks:
      quinly-services:
        ipv4_address: ${VIKUNJA_IP}

  gitea-frontend:
    image: docker.gitea.com/gitea:nightly
    container_name: gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
    restart: always
    volumes:
      - gitea-data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      quinly-services:
        ipv4_address: ${GITTEA_IP}
      quinly-gitea:

  gitea-db:
    image: docker.io/library/mysql:8
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=gitea
      - MYSQL_USER=gitea
      - MYSQL_PASSWORD=gitea
      - MYSQL_DATABASE=gitea
    networks:
      - quinly-gitea
    volumes:
      - gitea-db:/var/lib/mysql

volumes:
  planka-avatars:
  planka-images:
  planka-attachments:
  planka-data:
  heimdall-config:
  code-server-config:
  gitea-data:
  gitea-db:
